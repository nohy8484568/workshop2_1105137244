@using Workshop2.Models
@model Workshop2.Models.ViewModel.BooksIndexViewModel

@{
    ViewBag.Title = "Index";
    Book book = new Book();
}
<style>
    body {
        font-family: Microsoft JhengHei;
    }
</style>
@using (Html.BeginForm("Index", "Books"))
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => book.Class_Code, htmlAttributes: new { @class = "control-label" })
            <div class="">
                <select class="form-control" name="book.Class_Code" id="book_Class_Code">
                    <option></option>
                    @foreach (var item in Model.BookClasses)
                    {
                        <option value="@item.Class_Code">@item.Book_Class</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
                @Html.LabelFor(model => book.Book_Name, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => book.Book_Name, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => book.Book_Status, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <select class="form-control" name="book.Book_Status" id="book_Book_Status" onchange="checkStatus()">
                        <option></option>
                        @foreach (var item in Model.BookStatuses)
                        {
                            <option value="@item.StatusCode">@item.StatusName</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => book.Member_Code, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <select class="form-control" name="book.Member_Code" id="book_Member_Code">
                        <option></option>
                        @foreach (var item in Model.Members)
                        {
                            <option value="@item.Member_Code">@item.Member_Name</option>
                        }
                    </select>
                </div>
            </div>

        <div class="form-group">
            <div class="col-md-offset-2">
                <input type="submit" value="搜尋" class="btn btn-success" />
            </div>        
        </div>

        <div class="form-group">
            <div class="col-md-offset-2">
                <input type="reset" value="清除" onmouseleave="checkStatus()" class="btn btn-warning" />
            </div>        
        </div>
    </div>
    <hr />
}
<p>
    @Html.ActionLink("新增書籍", "Create", null, new { @class = "btn btn-primary" })
</p>
<table class="table table-hover">
    <tr style="background: #58B2DC;">
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Class_Code)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Book_Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Book_PurchaseTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Book_Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Books.First().Member_Code)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Books)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => modelItem.BookClasses
                    .Find(x=>x.Class_Code == item.Class_Code).Book_Class)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Book_Name)
            </td>
            <td>
                @item.Book_PurchaseTime.Value.ToString("yyyy/MM/dd")
            </td>
            <td>
                @Html.DisplayFor(modelItem => modelItem.BookStatuses
                    .Find(x=>x.StatusCode == item.Book_Status).StatusName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => modelItem.Members
                    .Find(x=>x.Member_Code == item.Member_Code).Member_Name)
            </td>
            <td>
                @Html.ActionLink("編輯", "Edit", new { id = item.Book_Code }, new { @class = "btn btn-info" })
                @Html.ActionLink("刪除", "Delete", new { id = item.Book_Code }, new { @class = "btn btn-danger" })
            </td>
        </tr>
    }

</table>
<script>
    FillSearchField();
    function checkStatus() {
        var status = document.getElementById("book_Book_Status");
        var member = document.getElementById("book_Member_Code");
        if (status.value == "A") {
            member.value = "";
            member.disabled = true;
        } else if (status.value == "B") {
            member.disabled = false;
        } else if (status.value == "U") {
            member.value = "";
            member.disabled = true;
        } else if (status.value == "C") {
            member.disabled = false;
        } else {
            member.disabled = false;
        }
    }
    function FillSearchField() {
        var name = document.getElementById("book_Book_Name");
        var category = document.getElementById("book_Class_Code");
        var status = document.getElementById("book_Book_Status");
        var member = document.getElementById("book_Member_Code");
        name.value = "@ViewBag.name";
        category.value = "@ViewBag.category";
        status.value = "@ViewBag.status";
        member.value = "@ViewBag.member";
        checkStatus();
    }
</script>
